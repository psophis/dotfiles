" Sections:
"    - Vundle
"    - General
"    - Plugin Settings
"    - FileType Specific
"    - VIM User Interface
"    - GUI VIM
"    - Colors and Theme
"    - Files, Backups and Undo
"    - Tab, Indent, and Folding
"    - Moving Around
"    - Tabs, Windows and Buffers
"    - Tab Completion
"    - Editing Mappings
"    - Search
"    - Spell Check
"    - Copy Paste

" Original source: http://amix.dk/vim/vimrc.txt

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Vundle:
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Required by vundle
set nocompatible
filetype off
set runtimepath+=~/.vim/bundle/vundle.vim
call vundle#begin()

" Let Vundle manage vundle, required
Bundle 'gmarik/vundle.vim'

" Interface
Bundle 'altercation/vim-colors-solarized'
Bundle 'airblade/vim-gitgutter'
Bundle 'bling/vim-airline'
Bundle 'mhinz/vim-startify'
Bundle 'scrooloose/nerdtree'

" Functionality
Bundle 'bronson/vim-trailing-whitespace'
Bundle 'scrooloose/nerdcommenter'
Bundle 'tpope/vim-fugitive'
Bundle 'tpope/vim-surround'

" Syntax

" All of your plugins must be added before the following line
call vundle#end()


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" General:
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Enable filetype plugins
filetype plugin on
filetype indent on

" Optimize for fast terminal connections
set ttyfast

" Don't redraw while executing macros (good performance config)
set lazyredraw

" Set key mapping timeout to remove mode switch in a terminal
set timeout timeoutlen=3000 ttimeoutlen=50

" Sets how many lines of history VIM has to remember
set history=500

" Set to auto read when a file is changed from the outside
set autoread

" Set utf8 as standard encoding and en_US as the standard language
set encoding=utf8

" Use unix as the standard file type
set fileformats=unix,dos,mac

" Map Leader to comma
let mapleader = ","
let g:mapleader = ","


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugin Settings:
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"" NERDcommenter
let NERDCommentWholeLinesInVMode=1
let NERDRemoveExtraSpaces=1
let NERDSpaceDelims=1

"" Startify
let g:startify_skiplist = [
    \ 'COMMIT_EDITMSG',
    \ ]
let g:startify_show_files = 1
let g:startify_show_files_number = 10
let g:startify_show_sessions = 1
let g:startify_change_to_vcs_root = 1
let g:startify_bookmarks = [
    \ '~/.vimrc',
    \ '~/.zshrc',
    \ '~/.tmux.conf'
    \ ]

"" VIM-Airline
" Solarized theme
let g:airline_thme = 'solarized'

" Remove seperator symbols
let g:airline_left_sep = ''
let g:airline_right_sep = ''

" Enable virtualenv integration
let g:airline#extensions#virtualenv#enabled = 1

"" NERDTree
" Show hidden files
let NERDTreeShowHidden=1

" Toggle NERDTree (has to be defined after the leader)
map <leader>nn :NERDTreeToggle<cr>

" Close vim if the only window left open is a NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType")
    \ && b:NERDTreeType == "primary") | q | endif

"" Vim-Trailing-Whitespace
" Delete trailing whitespace (calls plugin)
map <leader>dw :FixWhitespace<cr>


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" FileType Specific:
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Markdown
autocmd BufNewFile,BufReadPost *.md set filetype=markdown
autocmd Filetype markdown setlocal wrap
autocmd Filetype markdown setlocal linebreak
autocmd Filetype markdown setlocal nolist

" Git Commmit Message

" When commiting with git show diff in horizontal split using tpope/vim-fugitive
autocmd FileType gitcommit DiffGitCached | wincmd p

" Turn on spell check for commit messages
autocmd BufRead COMMIT_EDITMSG setlocal spell!


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" VIM User Interface:
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Display tabs, trailing spaces, end of line and nonbreaking space visually
set list listchars=tab:▸\ ,trail:·,eol:¬,nbsp:_

" Mouse
if has("mouse")
    set mouse=a
endif

" Turn on line numbers
set number

" Set lines to the cursor when moving vertically using j/k. Set to a high
" number (999) to keep the cursor in the center at all times.
set scrolloff=5

" Set columns to the cursor when moving horizontally using h/l. Set to a high
" number (999) to keep the cursor in the center at all times.
set sidescrolloff=14

" Always show current position in status bar.
set ruler

" Highlight current line
set cursorline

" Text width
set textwidth=80

" Highlight textwidth column plus one
set colorcolumn=+1

" Always show the status line
set laststatus=2

" Show uncompleted commands
set showcmd

" Will insert tab at beginning of line, will use completion if not at beginning
set wildmode=list:longest,list:full

"Enable command line tab completion
set wildmenu

" Stuff to ignore when tab completing
set wildignore=*.o,*.obj,*~,*.pyc
set wildignore+=*vim/backups*
set wildignore+=*DS_Store*
set wildignore+=*.png,*.jpg,*.gif

" Configure backspace so it acts as it should act
set backspace=eol,start,indent
set whichwrap+=<,>,h,l

" Show matching brackets when text indicator is over them
set showmatch

" No annoying sound on errors
set noerrorbells
set novisualbell
set t_vb=
set timeoutlen=500


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" GUI VIM (MacVIM, GVIM, etc..):
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" GUI is running or is about to start
if has("gui_running")

    " Set window size
    set lines=70 columns=90

    " Hide GUI toolbar
    set guioptions-=T

    " Show the tab bar as as GUI tab bar.
    set guioptions+=e

endif


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Colors and Theme:
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Enable syntax highlighting
syntax enable

set t_Co=256
colorscheme solarized
set background=dark
highlight clear SignColumn


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Files, Backups and Undo:
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Turn backup off
set noswapfile
set nobackup
set nowritebackup

" Keep undo history across sessions, by storing in file.
silent !mkdir ~/.vim/backups > /dev/null 2>&1
set undodir=~/.vim/backups
set undofile

" Remember info about open buffers on close.
set viminfo^=%

" Return to last edit position when opening files.
autocmd BufReadPost *
    \ if line("'\"") > 0 && line("'\"") <= line("$") |
    \     exe "normal! g`\"" |
    \ endif

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Tab, Indent, and Folding:
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Use spaces instead of tabs
set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4
set smarttab
set autoindent
set smartindent

" Don't wrap lines
set nowrap

" Don't fold by default
set nofoldenable

" Fold based on indent
set foldmethod=indent

" Deepest fold is 3 levels
set foldnestmax=3

set formatoptions=tcqronj


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Moving Around:
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Treat long lines as break lines
map k gk
map j gj

" Disable arrow keys
inoremap <Up> <Nop>
inoremap <Down> <Nop>
inoremap <Left> <Nop>
inoremap <Right> <Nop>
noremap <Up> <Nop>
noremap <Down> <Nop>
noremap <Left> <Nop>
noremap <Right> <Nop>

" Disable Backspace in normal/visual mode
nnoremap <BS> <Nop>
nnoremap <Del> <Nop>
vnoremap <BS> <Nop>
vnoremap <Del> <Nop>

" Disable Return in normal/visual mode
nnoremap <cr> <Nop>
vnoremap <cr> <Nop>

" Indent/unindented lines
vnoremap > >gv
vnoremap < <gv

" Move lines up/down
nnoremap <C-j> :m .+1<CR>==
nnoremap <C-k> :m .-2<CR>==
inoremap <C-j> <Esc>:m .+1<CR>==gi
inoremap <C-k> <Esc>:m .-2<CR>==gi
vnoremap <C-j> :m '>+1<CR>gv=gv
vnoremap <C-k> :m '<-2<CR>gv=gv


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Tabs, Windows and Buffers:
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Buffers can exist in the background without being in a window.
" http://items.sjbach.com/319/configuring-vim-right
set hidden

" Specify the behavior when switching between buffers,
set switchbuf=useopen,usetab,newtab

" Always show tab bar
set showtabline=2

" Open new split panes to right and bottom.
set splitright
set splitbelow

" Close current buffer
nnoremap <leader>bx :Bclose<cr>

" Close all buffers
nnoremap <leader>bxa :1,1000 bd!<cr>

" Tab management with similar binding to tmux.
nnoremap <leader>tc :tabnew<cr>
nnoremap <leader>tn :tabnext<cr>
nnoremap <leader>tp :tabprevious<cr>
nnoremap <leader>to :tabonly<cr>
nnoremap <leader>tx :tabclose<cr>
nnoremap <leader>tm :tabmove<cr>

" Opens a new tab with the current buffer's path. Super useful when editing
" files in the same directory.
nnoremap <leader>te :tabedit <c-r>=expand("%:p:h")<cr>/


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Tab Completion
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"" Tab completion
function! Inserttabwrapper()
    let col = col('.') - 1
    if !col || getline('.')[col - 1] !~ '\k'
        return "\<tab>"
    else
        return "\<c-p>"
    endif
endfunction

" Map <tab> to Inserttabwarpper()
inoremap <tab> <c-r>=Inserttabwrapper()<cr>

" Shift tab to backwards search
inoremap <s-tab> <c-n>


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Editing Mappings:
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Remap 0 to first non-blank character
nnoremap 0 ^

" Remap ^ to first column
nnoremap ^ 0

" Increment number by one
nnoremap + <C-a>

" Decrement number by one, using `=` so I don't have to press shift.
nnoremap = <C-x>

" Force saving files that require root permission
cmap w!! w !sudo tee > /dev/null %

" Change working directory to the directory of the open buffer.
nnoremap <leader>cd :cd %:p:h<cr>:pwd<cr>

" Open URL under curser, OSX only
nnoremap <silent><Leader>o :!open <cWORD><CR><CR>


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Search:
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Ignore case when searching
set ignorecase

" When searching try to be smart about cases
set smartcase

" Highlight search results
set hlsearch

" Highlight searches as they are typed.
set incsearch

" Disable search highlight
map <silent> <leader><space> :silent :nohlsearch<cr>


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Spell Check:
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Pressing ,ss will toggle and untoggle spell checking
map <leader>ss :setlocal spell!<cr>

" Spell check forword
map <leader>sn ]s

"Spell check Backwards
map <leader>sp [s

" Add to custom dictionary
map <leader>sa zg

" Suggest replacements
map <leader>s? z=


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Copy Paste:
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Toggle paste mode on and off
map <leader>pp :setlocal paste!<cr>

" Disable paste mode when leaving insert mode
autocmd InsertLeave * set nopaste


