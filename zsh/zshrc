# -------------- #
#   ZSH Config   #
# -------------- #

# Path to your zsh configuration.
ZSH=$HOME/.dotphiles/zsh

export EDITOR=vim

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable weekly dotphiles auto-update checks
# DOTPHILES_AUTO_UPDATE="false"

# Uncomment the following line to change how often to auto-update dotphiles (in days).
# export UPDATE_DOTPHILES_DAYS=13

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment following line if you want red dots to
# be displayed while waiting for completion
COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load?
# (plugins can be found in ~/.dotphiles/zsh/plugins/*)
# Custom plugins may be added to ~/.dotphiles/zsh/custom/plugins/
plugins=(\
    brew \
    brew-cask \
    colored-man \
    django \
    go \
    python \
    pip \
    ruby \
    rsync \
    rake \
    sublime \
    terminalapp \
    vagrant \
    vim-interaction \
    xcode \
)

# Load plugins
source $HOME/.dotphiles/zsh/load-plugins.sh

# Theme options
THEME_RUBY="false"

# Load theme
source "$HOME/.dotphiles/zsh/themes/psophis.zsh-theme"


# -------------- #
#    ENV VARS    #
# -------------- #

# Turn off less history
export LESSHISTFILE="-"

# brew-cask default to /Applications
export HOMEBREW_CASK_OPTS="--appdir=/Applications"


# -------------- #
#      PATH      #
# -------------- #

if [[ "$OSTYPE" == "darwin"* ]]; then
    # OSX
    export GOPATH=$HOME/go
    export PYTHONPATH=$(brew --prefix)/lib/python2.7/site-packages:$PYTHONPATH
    export MANPATH=$(brew --prefix coreutils)/libexec/gnuman:$MANPATH
    export PATH="$HOME/.dotphiles/bin:$GOPATH/bin:$(brew --prefix coreutils)/libexec/gnubin:/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin"
else
    # Non-OSX
    export GOPATH=$HOME/go
    export PATH="$HOME/.dotphiles/bin:$GOPATH/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
    export PYTHONPATH=$(python -c 'from distutils.sysconfig import get_python_lib; print(get_python_lib())'):$PYTHONPATH
fi


# ------------------ #
#   Custom Aliases   #
# ------------------ #

# http://brettterpstra.com/2013/03/31/a-few-more-of-my-favorite-shell-aliases/
# http://brettterpstra.com/2013/03/14/more-command-line-handiness/

# Shortcuts
alias vi='vim'
alias g='git'

# Alias xdg-open to open if xdg-open exist
whence xdg-open > /dev/null && alias open='xdg-open'

# OSX Specific alises
if [[ "$OSTYPE" == "darwin"* ]]; then

    function trash() {
        local trash_dir="${HOME}/.Trash"
        local temp_ifs=$IFS
        IFS=$'\n'
        for item in "$@"; do
            if [[ -e "$item" ]]; then
                item_name="$(basename $item)"
                if [[ -e "${trash_dir}/${item_name}" ]]; then
                    mv -f "$item" "${trash_dir}/${item_name} $(date "+%H-%M-%S")"
                else
                    mv -f "$item" "${trash_dir}/"
                fi
            fi
        done
        IFS=$temp_ifs
    }

    # Open Apps
    alias quicklook="qlmanage -p &>/dev/null"
    alias ql="quicklook"
    alias finder="open ."

    # Recursively delete `.DS_Store` files
    alias clean-ds_store="find . -name '*.DS_Store' -type f -ls -delete"

    # cd to the path of the front Finder window
    cdf() {
        local target=`osascript -e 'tell application "Finder" to if (count of Finder windows) > 0 then get POSIX path of (target of front Finder window as text)'`
        if [ "$target" != "" ]; then
            cd "$target"; unset target
        else
            echo 'No Finder window found' >&2
        fi
    }

fi

# List direcory contents - ls
if [[ "$(ls --version)" = *"GNU"* ]]; then
    # GNU ls
    alias ls='ls --color=always'
    alias ll='ls --color=always --format=long --human-readable'
    alias l='ls --color=always --almost-all --format=long --human-readable'
else
    # Not GNU ls
    alias ll='ls -lh'
    alias l='ls -Alh'
fi

# Make executable
alias ax="chmod a+x"

# Get your current public IP
alias externalip="curl icanhazip.com"

# list TODO lines from the current project
alias todos="ack --recurse --group '(TODO|todo|Todo|XXX|BUG|HACK|FIX(ME)?):'"

# http://ruslanspivak.com/2010/06/02/urlencode-and-urldecode-from-a-command-line/
# Enode url
function urlencode() {
    echo $@ | tr -d "\n" | xxd -plain | sed "s/\(..\)/%\1/g"
}

# Decode url
function urldecode() {
    printf $(echo -n $@ | sed 's/\\/\\\\/g;s/\(%\)\([0-9a-fA-F][0-9a-fA-F]\)/\\x\2/g')"\n"
}

