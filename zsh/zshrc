# -------------- #
#   ZSH Config   #
# -------------- #

# Path to your zsh configuration.
ZSH=$HOME/.dotphiles/zsh

export EDITOR=vim

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable weekly dotphiles auto-update checks
# DOTPHILES_AUTO_UPDATE="false"

# Uncomment the following line to change how often to auto-update dotphiles (in days).
# export UPDATE_DOTPHILES_DAYS=13

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment following line if you want red dots to
# be displayed while waiting for completion
COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load?
# (plugins can be found in ~/.dotphiles/zsh/plugins/*)
# Custom plugins may be added to ~/.dotphiles/zsh/custom/plugins/
plugins=(\
    colored-man \
    go \
    python \
    pip \
    rsync \
    rake \
    vim-interaction \
    virtualenvwrapper \
)

# If OSX add these plugins as well.
if [[ "$OSTYPE" == "darwin"* ]]; then
    plugins+=( \
        brew \
        brew-cask \
        pod \
        terminalapp \
    )
fi

# Load plugins
source $HOME/.dotphiles/zsh/load-plugins.sh

# Theme options
THEME_RUBY="false"

# Load theme
source "$HOME/.dotphiles/zsh/themes/psophis.zsh-theme"


# -------------- #
#    ENV VARS    #
# -------------- #

# Turn off less history
export LESSHISTFILE="-"


# -------------- #
#      PATH      #
# -------------- #

if [[ "$OSTYPE" == "darwin"* ]]; then

    # `brew --prefix coreutils` set staticly for speed
    local brew_prefix_coreutils="/usr/local/opt/coreutils"

    # OSX
    export GOPATH=$HOME/go
    export PATH="$HOME/.dotphiles/bin:$GOPATH/bin:$brew_prefix_coreutils/libexec/gnubin:/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin"
    export MANPATH=$brew_prefix_coreutils/libexec/gnuman:$MANPATH

    # brew-cask default to /Applications
    export HOMEBREW_CASK_OPTS="--appdir=/Applications"
else
    # Non-OSX
    export GOPATH=$HOME/go
    export PATH="$HOME/.dotphiles/bin:$GOPATH/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
fi


# ------------------ #
#   Custom Aliases   #
# ------------------ #

# Shortcuts

# Use neovim instead of vim if installed
hash nvim >/dev/null 2>&1 && alias vi='nvim'
alias g='git'

# Alias xdg-open to open if xdg-open exist
hash xdg-open >/dev/null 2>&1 && alias open='xdg-open'

# Recursively delete `.DS_Store` files
alias clean-ds_store="find . -name '*.DS_Store' -type f -ls -delete"

# OSX Specific aliases
if [[ "$OSTYPE" == "darwin"* ]]; then

    # Open Apps
    alias quicklook="qlmanage -p &>/dev/null"
    alias ql="quicklook"
    alias finder="open ."

    function trash() {
        local trash_dir="${HOME}/.Trash"
        local temp_ifs=$IFS
        IFS=$'\n'
        for item in "$@"; do
            if [[ -e "$item" ]]; then
                item_name="$(basename $item)"
                if [[ -e "${trash_dir}/${item_name}" ]]; then
                    mv -f "$item" "${trash_dir}/${item_name} $(date "+%H-%M-%S")"
                else
                    mv -f "$item" "${trash_dir}/"
                fi
            fi
        done
        IFS=$temp_ifs
    }

    # cd to the path of the front Finder window
    cdf() {
        local target=`osascript -e 'tell application "Finder" to if (count of Finder windows) > 0 then get POSIX path of (target of front Finder window as text)'`
        if [ "$target" != "" ]; then
            cd "$target"; unset target
        else
            echo 'No Finder window found' >&2
        fi
    }

fi

# Set <Caps Lock> to <Ctrl> and single press <Ctrl> to <Esc>
if [[ "$OSTYPE" != "darwin"* ]]; then
    if hash xcape >/dev/null 2>&1; then
        setxkbmap -option 'caps:ctrl_modifier'
        xcape -e 'Caps_Lock=Escape;Control_L=Escape;Control_R=Escape'
    fi
fi

# List directory contents - ls
if [[ "$(ls --version)" = *"GNU"* ]]; then
    # GNU ls
    alias ls='ls --color=always'
    alias ll='ls --color=always --format=long --human-readable'
    alias l='ls --color=always --almost-all --format=long --human-readable'
else
    # Not GNU ls
    alias ll='ls -lh'
    alias l='ls -Alh'
fi

# Make executable
alias ax="chmod a+x"

# Get current public IP
alias externalip="curl icanhazip.com"

# list TODO lines from the current project
alias todos="ack --recurse --group '(TODO|todo|Todo|XXX|BUG|HACK|FIX(ME)?):'"

